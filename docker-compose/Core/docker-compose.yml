# name: core
services:


  # dockerproxy:
  #   image: ghcr.io/tecnativa/docker-socket-proxy:0.3.0
  #   container_name: dockerproxy
  #   restart: always
  #   networks:
  #     - proxy
  #   ports:
  #     - 2375:2375
  #   environment:
  #     CONTAINERS: 1 # Allow access to viewing containers
  #     POST: 0 # Disallow any POST operations (effectively read-only)
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only

  # portainer:
  #   image: portainer/portainer-ce:latest
  #   container_name: portainer
  #   restart: always
  #   networks:
  #     - proxy
  #   ports:
  #     #- 9000:9000 # Legacy HTTP port
  #     - 9443:9443
  #     #- 8000:8000 # Portainer Edge Agents
  #   security_opt:
  #     - no-new-privileges:true
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - $MOUNT_POINT_DATA/portainer:/data
  #   labels:
  #     # HOMEPAGE
  #     - homepage.group=Management
  #     - homepage.name=portainer
  #     - homepage.icon=portainer.png
  #     - homepage.ping=https://portainer.$DOMAIN_NAME
  #     - homepage.href=https://portainer.$DOMAIN_NAME
  #     - homepage.description=Container deployement interface
  #     - homepage.widget.type=portainer
  #     - homepage.widget.url=https://portainer.$DOMAIN_NAME
  #     - homepage.widget.env=X
  #     - homepage.widget.key=$HOMEPAGE_PORTAINER_KEY
  #     # TRAEFIK
  #     - traefik.enable=true
  #     - traefik.docker.network=proxy
  #     - traefik.http.routers.portainer.rule=Host(`portainer.$DOMAIN_NAME`)
  #     - traefik.http.services.portainer.loadbalancer.server.port=9000

  postgres:
    # Recommended: Pin to a specific version
    # https://github.com/FerretDB/documentdb/pkgs/container/postgres-documentdb
    image: ghcr.io/ferretdb/postgres-documentdb:16-0.105.0-ferretdb-2.4.0
    restart: unless-stopped
    # ports:
    #   - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${KOMODO_DB_USERNAME}
      POSTGRES_PASSWORD: ${KOMODO_DB_PASSWORD}
      POSTGRES_DB: postgres
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers

  ferretdb:
    # Recommended: Pin to a specific version
    # https://github.com/FerretDB/FerretDB/pkgs/container/ferretdb
    image: ghcr.io/ferretdb/ferretdb:2.3.1
    restart: unless-stopped
    depends_on:
      - postgres
    # ports:
    #   - 27017:27017
    volumes:
      - ferretdb-state:/state
    environment:
      FERRETDB_POSTGRESQL_URL: postgres://${KOMODO_DB_USERNAME}:${KOMODO_DB_PASSWORD}@postgres:5432/postgres
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers

  core:
    image: ghcr.io/moghtech/komodo-core:1.18.3
    restart: unless-stopped
    depends_on:
      - ferretdb
    ports:
      - 9120:9120
    environment:
      KOMODO_DATABASE_ADDRESS: ferretdb:27017
      KOMODO_DATABASE_USERNAME: ${KOMODO_DB_USERNAME}
      KOMODO_DATABASE_PASSWORD: ${KOMODO_DB_PASSWORD}
    volumes:
      ## Core cache for repos for latest commit hash / contents
      - repo-cache:/repo-cache
      ## Store sync files on server
      # - /path/to/syncs:/syncs
      ## Optionally mount a custom core.config.toml
      # - /path/to/core.config.toml:/config/config.toml
    ## Allows for systemd Periphery connection at
    ## "http://host.docker.internal:8120"
    # extra_hosts:
    #   - host.docker.internal:host-gateway
    labels:
      # KOMODO
      komodo.skip: "" # Prevent Komodo from stopping with StopAllContainers
      # HOMEPAGE
      homepage.group: Management
      homepage.name: Komodo
      homepage.icon: komodo.png
      homepage.ping: https://komodo.${DOMAIN_NAME}
      homepage.href: https://komodo.${DOMAIN_NAME}
      homepage.description: Komodo core service
      homepage.widget.type: komodo
      homepage.widget.url: https://komodo.${DOMAIN_NAME}
      homepage.widget.key: "${KOMODO_WIDGET_KEY}"
      homepage.widget.secret: "${KOMODO_WIDGET_SECRET}"
      # GODOXY
      proxy.aliases: komodo
      proxy.komodo.port: 9120

  periphery:
    image: ghcr.io/moghtech/komodo-periphery:1.18.3
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    ports:
      - 8120:8120
    volumes:
      ## Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      ## Allow Periphery to see processes outside of container
      - /proc:/proc
      ## Specify the Periphery agent root directory.
      ## Must be the same inside and outside the container,
      ## or docker will get confused. See https://github.com/moghtech/komodo/discussions/180.
      ## Default: /etc/komodo.
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}
      ## Optionally mount a custom core.config.toml
      # - /path/to/periphery.config.toml:/config/config.toml

volumes:
  # Postgres
  postgres-data:
  # FerretDB
  ferretdb-state:
  # Core
  repo-cache:

# networks:
#   proxy:
#     external: true
