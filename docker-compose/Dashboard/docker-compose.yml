# name: dashboards
services:

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:v0.4.0
    container_name: dockerproxy
    restart: always
    ports:
      - 127.0.0.1:${DOCKER_PROXY_PORT-2375}:2375
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only

  homepage:
    image: ghcr.io/gethomepage/homepage:v1.4.6
    container_name: homepage
    restart: always
    # networks:
    #   - proxy
    #ports:
    #  - 3000:3000
    dns:
      - $DNS_ADDRESS
    environment:
      PUID: $PUID
      PGID: $PGID
      HOMEPAGE_ALLOWED_HOSTS: homepage.$DOMAIN_NAME
    volumes:
      - $MOUNT_POINT_DATA/homepage:/app/config
    labels:
      # TRAEFIK
      # - traefik.enable=true
      # - traefik.docker.network=proxy
      # - traefik.http.routers.homepage.rule=Host(`homepage.$DOMAIN_NAME`)
      # - traefik.http.services.homepage.loadbalancer.server.port=3000
      # GODOXY
      proxy.homepage.port: 3000


  # dashy:
  #   image: lissy93/dashy:3.1.0
  #   container_name: Dashy
  #   restart: always
  #   profiles:
  #     - dashy
  #     - full
  # #   networks:
  # #     - proxy
  #   #ports:
  #   #  - 8080:80
  # #   dns:
  # #     - $DNS_ADDRESS
  #   environment:
  #     UID: $PUID
  #     GID: $PGID
  #   volumes:
  #     - $MOUNT_POINT_DATA/dashy:/app/public
  #   healthcheck:
  #     test: ['CMD', 'node', '/app/services/healthcheck']
  #     interval: 3m
  #     timeout: 30s
  #     retries: 3
  #     start_period: 40s
  #   labels:
  #     # TRAEFIK
  # #     - traefik.enable=true
  # #     - traefik.docker.network=proxy
  # #     - traefik.http.routers.dashy.rule=Host(`dashy.$DOMAIN_NAME`)
  # #     - traefik.http.services.dashy.loadbalancer.server.port=80
  #     proxy.port: 8080


# networks:
#   proxy:
#     external: true
